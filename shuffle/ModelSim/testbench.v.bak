`timescale 1ns / 1ps

module testbench();

    // reg signals provide inputs to the design under test
    reg [1:0] A;
    reg [1:0] B;
    
    // wire signals are used for outputs
    wire [3:0] S;
    
    // instantiate the design under test
    multiplier2 M1 (A, B, S);
    
    // assign signal values at various simulation times
    initial
    begin
        #20;
        A <= 2'b00; B <= 2'b00; #20;
        A <= 2'b01; B <= 2'b00; #20;
        A <= 2'b10; B <= 2'b00; #20;
        A <= 2'b11; B <= 2'b00; #20;
        
        A <= 2'b00; B <= 2'b01; #20;
        A <= 2'b01; B <= 2'b01; #20;
        A <= 2'b10; B <= 2'b01; #20;
        A <= 2'b11; B <= 2'b01; #20;
        
        A <= 2'b00; B <= 2'b10; #20;
        A <= 2'b01; B <= 2'b10; #20;
        A <= 2'b10; B <= 2'b10; #20;
        A <= 2'b11; B <= 2'b10; #20;
    
        A <= 2'b00; B <= 2'b11; #20;
        A <= 2'b01; B <= 2'b11; #20;
        A <= 2'b10; B <= 2'b11; #20;
        A <= 2'b11; B <= 2'b11; #20;
    
        
        #40;
        B <= 2'b00; A <= 2'b00; #20;
        B <= 2'b01; A <= 2'b00; #20;
        B <= 2'b10; A <= 2'b00; #20;
        B <= 2'b11; A <= 2'b00; #20;
        
        B <= 2'b00; A <= 2'b01; #20;
        B <= 2'b01; A <= 2'b01; #20;
        B <= 2'b10; A <= 2'b01; #20;
        B <= 2'b11; A <= 2'b01; #20;
        
        B <= 2'b00; A <= 2'b10; #20;
        B <= 2'b01; A <= 2'b10; #20;
        B <= 2'b10; A <= 2'b10; #20;
        B <= 2'b11; A <= 2'b10; #20;

        B <= 2'b00; A <= 2'b11; #20;
        B <= 2'b01; A <= 2'b11; #20;
        B <= 2'b10; A <= 2'b11; #20;
        B <= 2'b11; A <= 2'b11; #20;
        
        
    end // initial
endmodule