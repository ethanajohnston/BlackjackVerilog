
/*
	Generates a 52 card deck with random order.
	By: Ethan Johnston B00828763
*/

module dealCard(
	input clk,
	input rst, 
	input flag,
	output reg [5:0] card,
	output reg [3:0] cardValue
);

	reg [5:0] deck [0:51];
	reg [5:0] remaining_count;
	//integer temp;
	integer i, k, dealCount;
	reg [5:0] random_index;

	reg [5:0] lfsr = 6'b011110; // SEED
	reg feedback;

	// Create lfsr with feedback polynomial of x^6 + x^5 + 1  
	assign feedback = lfsr[6-1] ^ lfsr[5-1];

	reg generated_values [0:51]; // Array to track generated values

	
	
	
	initial begin

		k = 0;
		remaining_count = 52;    // Initialize remaining count
		dealCount = 0;

		// Initialize generated_values array
		for (i = 0; i < 52; i = i + 1) begin
		
			generated_values[i] = 0;
			
		end
	end

	
	
	
	always @(posedge clk or posedge rst) begin
	
		if (rst) begin
		 
			remaining_count = 52;
			lfsr = 6'b110101;
			k = 0;
			
			// Reset generated_values array on reset
			for (i = 0; i <= 51; i = i + 1) begin
			
				generated_values[i] = 0;
				
			end
			
		end
		else if (remaining_count > 0) begin
		
			lfsr = {lfsr[4:0], feedback};
			random_index = lfsr % 52;

			// Find the next unused value
			i = 0;
			
			for (i = 0; i < 200; i = i + 1) begin
			
				random_index = (lfsr + i) % 52;
				
				if (generated_values[random_index] == 0) begin
				
					i = 200; // Exit the loop if an unused value is found
					
				end
			end
			
			// Mark the value as used
			generated_values[random_index] = 1;

			// Set current index with the randomly generated value
			deck[remaining_count - 1] = random_index;

			// Decrease the remaining count
			remaining_count = remaining_count - 1;
			
		end
		else if(remaining_count == 0 && k == 0) begin
		
			for (i = 0; i < 52; i = i + 1) begin
			
				$display("%d:  %d", i, deck[i]);
				k = 1;
				
			end
		end
	end
  
  
  
  
  // Change card output port to value of next card in shuffled deck when flag input port is toggled.
	always @(posedge flag or negedge flag or posedge rst) begin
	
		if (rst) begin
		
			dealCount = 0;
			
		end
		else if (k == 1) begin
			
			// Set card output port to next card in shuffled deck
			card = deck[dealCount];
			
			
			// Set cardValue output port to next card in shuffled decks value in blackjack.
			// Aces are set as 1 and checked in controller if they can be a 10.
			case (card)
				0,1,2,3,4,5,6,7,8: cardValue = card + 1;  		// Cards Ace to 9 clubs
				9,10,11,12: cardValue = 10;  						// 10, Jack, Queen, King clubs
				13,14,15,16,17,18,19,20,21: cardValue = card - 12;  	// Cards Ace to 9 of Diamonds
				22,23,24,25: cardValue = 10;  					// 10, Jack, Queen, King of Diamonds
				26,27,28,29,30,31,32,33,34: cardValue = card - 25;  	// Cards Ace to 9 of Hearts
				35,36,37,38: cardValue = 10;  					// 10, Jack, Queen, King of Hearts
				39,40,41,42,43,44,45,46,47: cardValue = card - 38;  	// Cards Ace to 9 of Spades
				48,49,50,51: cardValue = 10;  					// 10, Jack, Queen, King of Spades
				default: cardValue = 0;  						// Invalid card index
			endcase
			
			
			//$display("%d ->  %d", dealCount, card);
			dealCount = dealCount + 1;
			
		end
	end

	
endmodule


// make this into deal module. When a bit in the controller is toggled, the next cards number value is put on the output card port. This can be used however.
